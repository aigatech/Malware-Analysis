from utils.bin_processing import analyze_and_save_binary
from utils.log_utils import setup_logging

import os
import glob
from tqdm import tqdm
import click

@click.command()
@click.option('--data_dir', default='data', help='Directory where the neutralized binaries are stored')
@click.option('--vis_mode', default=2, type=int, help='Visualization mode: 0 = visualize in window, 1 = save as HTML docs, 2 = save graphs w/o visualizing as edgelists')
@click.option('--job-id', default=0, type=int, help='Job ID for logging')
def main(data_dir, vis_mode, job_id):
    """
    Main function to process binary files, generate their control flow graphs (CFGs),
    visualize them based on the specified mode, and log the visualization details.

    Parameters:
    data_dir (str): The directory containing the neutralized binaries.
    
    vis_mode (int): The mode of visualization 
                    0: visualize in window, 
                    1: save as HTML docs
                    2: save graphs without visualizing

    job_id (int): The unique identifier for the job, used for logging purposes.
    """
    log_file = setup_logging(job_id)

    for infile in tqdm(glob.glob(os.path.join(data_dir, '*')), desc="Processing binaries"):
        analyze_and_save_binary(infile, vis_mode, log_file)

if __name__ == '__main__':
    main()